{"version":3,"sources":["components/context.js","components/Digit.js","components/Operations.js","App.js","reportWebVitals.js","index.js"],"names":["mycontext","React","createContext","Provider","Consumer","Digit","props","num","setV1","setV2","focus","setFocus","ops","setOps","res","reset","rowSpan","colSpan","onClick","v1","v2","Operation","style","background","slice","length","App","useState","setRes","ref1","useRef","ref2","contextValue","v11","v22","className","onSubmit","e","preventDefault","type","placeholder","ref","readOnly","value","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KACaA,EAAYC,IAAMC,gBAClBC,EAAWH,EAAUG,SACrBC,EAAWJ,EAAUI,S,OCAnB,SAASC,EAAMC,GAC5B,IAAMC,EAAMD,EAAMC,IAElB,OACE,cAACH,EAAD,UACG,YAAiE,IAA9DI,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,MAA+C,EAAxCC,SAAwC,EAA9BC,IAA8B,EAAzBC,OAAyB,EAAjBC,IAAiB,EAAZC,MACnD,MAAc,KAAVL,EAEA,oBACEM,QAASV,EAAMU,QACfC,QAASX,EAAMW,QACfC,QAAS,kBAAMV,GAAM,SAAAW,GAAE,OAAIA,EAAKZ,MAHlC,SAKE,6BAAKD,EAAMC,QAKb,oBACES,QAASV,EAAMU,QACfC,QAASX,EAAMW,QACfC,QAAS,kBAAMT,GAAM,SAAAW,GAAE,OAAIA,EAAKb,MAHlC,SAKE,6BAAKD,EAAMC,W,MCvBV,SAASc,EAAUf,GAChC,IAAMC,EAAMD,EAAMC,IAElB,OACE,cAACH,EAAD,UACG,YAAiE,IAA9DI,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MACnD,MAAY,MAARR,EAEA,oBACES,QAASV,EAAMU,QACfC,QAASX,EAAMW,QACfC,QAASJ,EACTQ,MAAO,CAAEC,WAAY,aAJvB,SAME,6BAAKjB,EAAMC,QAGE,MAARA,EAEP,oBAAIS,QAASV,EAAMU,QAASC,QAASX,EAAMW,QAASC,QAASH,EAA7D,SACE,6BAAKT,EAAMC,QAGE,QAARA,EACK,KAAVG,EAEA,oBACEM,QAASV,EAAMU,QACfC,QAASX,EAAMW,QACfC,QAAS,kBAAMV,GAAM,SAAAW,GAAE,OAAIA,EAAGK,MAAM,EAAGL,EAAGM,OAAS,OAHrD,SAKE,6BAAKnB,EAAMC,QAKb,oBACES,QAASV,EAAMU,QACfC,QAASX,EAAMW,QACfC,QAAS,kBAAMT,GAAM,SAAAW,GAAE,OAAIA,EAAGI,MAAM,EAAGJ,EAAGK,OAAS,OAHrD,SAKE,6BAAKnB,EAAMC,SAIL,KAARK,GAAYD,GAAS,SAAAD,GAAK,MAAI,OAEhC,oBACEM,QAASV,EAAMU,QACfC,QAASX,EAAMW,QACfC,QAAS,kBAAML,GAAO,SAAAD,GAAG,OAAIL,MAH/B,SAKE,6BAAKD,EAAMC,YC2FVmB,MA5If,WAAgB,IAAD,EACOC,mBAAS,IADhB,mBACNR,EADM,KACFX,EADE,OAEOmB,mBAAS,IAFhB,mBAENP,EAFM,KAEFX,EAFE,OAGSkB,mBAAS,IAHlB,mBAGNf,EAHM,KAGDC,EAHC,OAISc,mBAAS,IAJlB,mBAINb,EAJM,KAIDc,EAJC,OAKaD,mBAAS,IALtB,mBAKNjB,EALM,KAKCC,EALD,KAMPkB,EAAOC,mBACPC,EAAOD,mBAmCPE,EAAe,CACnBxB,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,SAAUA,EACVC,IAAKA,EACLC,OAAQA,EACRC,IAxCiB,WACjB,IAAImB,EAAW,EAALd,EACNe,EAAW,EAALd,EACV,OAAQR,GACN,IAAK,IACHgB,GAAO,SAAAd,GAAG,OAAImB,EAAMC,KACpB,MACF,IAAK,IACHN,GAAO,SAAAd,GAAG,OAAImB,EAAMC,KACpB,MACF,IAAK,IACHN,GAAO,SAAAd,GAAG,OAAImB,EAAMC,KACpB,MACF,IAAK,IACHN,GAAO,SAAAd,GAAG,OAAImB,EAAMC,KACpB,MACF,QACEN,GAAO,SAAAd,GAAG,OAAIA,KAElBN,GAAM,SAAAW,GAAE,MAAI,MACZV,GAAM,SAAAW,GAAE,MAAI,MACZP,GAAO,SAAAD,GAAG,MAAI,MACdD,GAAS,SAAAD,GAAK,MAAI,OAmBlBK,MAhBY,WACZP,GAAM,SAAAW,GAAE,MAAI,MACZV,GAAM,SAAAW,GAAE,MAAI,MACZP,GAAO,SAAAD,GAAG,MAAI,MACdgB,GAAO,SAAAd,GAAG,MAAI,MACdH,GAAS,SAAAD,GAAK,MAAI,QAcpB,OACE,sBAAKyB,UAAU,MAAf,UACE,uCACA,sBAAMC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAAvB,SACE,kCACE,kCACE,+BACE,6BACE,+CAEF,oBAAIrB,QAAQ,IAAZ,SACE,uBACEsB,KAAK,OACLC,YAAa1B,EACb2B,IAAKZ,EACLa,UAAQ,SAId,+BACE,6BACE,sCACG,qCADH,iBAIF,oBAAIzB,QAAQ,IAAZ,SACE,uBAAOsB,KAAK,OAAOC,YAAarB,EAAIsB,IAAKV,EAAMW,UAAQ,SAG3D,+BACE,6BACE,sCACG,qCADH,iBAIF,oBAAIzB,QAAQ,IAAZ,SACE,uBAAOsB,KAAK,OAAOC,YAAapB,EAAIsB,UAAQ,SAGhD,+BACE,6BACE,iDAEF,oBAAIzB,QAAQ,IAAZ,SACE,uBAAOsB,KAAK,OAAOC,YAAa5B,EAAK8B,UAAQ,YAInD,gCACE,eAACvC,EAAD,CAAUwC,MAAOX,EAAjB,UACE,+BACE,cAACX,EAAD,CAAWd,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACvC,cAACI,EAAD,CAAWd,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACvC,cAACI,EAAD,CAAWd,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACvC,cAACI,EAAD,CAAWd,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,SAEzC,+BACE,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACnC,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACnC,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACnC,cAACI,EAAD,CAAWd,IAAI,MAAMS,QAAQ,IAAIC,QAAQ,SAE3C,+BACE,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACnC,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACnC,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACnC,cAACI,EAAD,CAAWd,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,SAEzC,+BACE,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACnC,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACnC,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACnC,cAACI,EAAD,CAAWd,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,SAEzC,+BACE,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,MACnC,cAACZ,EAAD,CAAOE,IAAI,IAAIS,QAAQ,IAAIC,QAAQ,mBAM7C,qBAAK2B,GAAG,SAAR,0CCjISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e78a2622.chunk.js","sourcesContent":["import React from 'react';\r\nexport const mycontext = React.createContext();\r\nexport const Provider = mycontext.Provider;\r\nexport const Consumer = mycontext.Consumer;\r\n","import React from 'react';\r\nimport { Consumer } from './context';\r\n\r\nexport default function Digit(props) {\r\n  const num = props.num;\r\n  // console.log(num);\r\n  return (\r\n    <Consumer>\r\n      {({ setV1, setV2, focus, setFocus, ops, setOps, res, reset }) => {\r\n        if (focus === '')\r\n          return (\r\n            <td\r\n              rowSpan={props.rowSpan}\r\n              colSpan={props.colSpan}\r\n              onClick={() => setV1(v1 => v1 + num)}\r\n            >\r\n              <h3>{props.num}</h3>\r\n            </td>\r\n          );\r\n        else\r\n          return (\r\n            <td\r\n              rowSpan={props.rowSpan}\r\n              colSpan={props.colSpan}\r\n              onClick={() => setV2(v2 => v2 + num)}\r\n            >\r\n              <h3>{props.num}</h3>\r\n            </td>\r\n          );\r\n      }}\r\n    </Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Consumer } from './context';\r\n\r\nexport default function Operation(props) {\r\n  const num = props.num;\r\n  // console.log(num);\r\n  return (\r\n    <Consumer>\r\n      {({ setV1, setV2, focus, setFocus, ops, setOps, res, reset }) => {\r\n        if (num === '=') {\r\n          return (\r\n            <td\r\n              rowSpan={props.rowSpan}\r\n              colSpan={props.colSpan}\r\n              onClick={res}\r\n              style={{ background: 'orangered' }}\r\n            >\r\n              <h3>{props.num}</h3>\r\n            </td>\r\n          );\r\n        } else if (num === 'C') {\r\n          return (\r\n            <td rowSpan={props.rowSpan} colSpan={props.colSpan} onClick={reset}>\r\n              <h3>{props.num}</h3>\r\n            </td>\r\n          );\r\n        } else if (num === 'clr') {\r\n          if (focus === '')\r\n            return (\r\n              <td\r\n                rowSpan={props.rowSpan}\r\n                colSpan={props.colSpan}\r\n                onClick={() => setV1(v1 => v1.slice(0, v1.length - 1))}\r\n              >\r\n                <h3>{props.num}</h3>\r\n              </td>\r\n            );\r\n          else\r\n            return (\r\n              <td\r\n                rowSpan={props.rowSpan}\r\n                colSpan={props.colSpan}\r\n                onClick={() => setV2(v2 => v2.slice(0, v2.length - 1))}\r\n              >\r\n                <h3>{props.num}</h3>\r\n              </td>\r\n            );\r\n        } else {\r\n          if (ops !== '') setFocus(focus => '1');\r\n          return (\r\n            <td\r\n              rowSpan={props.rowSpan}\r\n              colSpan={props.colSpan}\r\n              onClick={() => setOps(ops => num)}\r\n            >\r\n              <h3>{props.num}</h3>\r\n            </td>\r\n          );\r\n        }\r\n      }}\r\n    </Consumer>\r\n  );\r\n}\r\n","import React, { useState, useRef } from 'react';\nimport { Provider } from './components/context';\nimport Digit from './components/Digit';\nimport './App.css';\nimport Operation from './components/Operations';\n\nfunction App() {\n  const [v1, setV1] = useState('');\n  const [v2, setV2] = useState('');\n  const [ops, setOps] = useState('');\n  const [res, setRes] = useState('');\n  const [focus, setFocus] = useState('');\n  const ref1 = useRef();\n  const ref2 = useRef();\n\n  const calcResult = () => {\n    let v11 = v1 * 1;\n    let v22 = v2 * 1;\n    switch (ops) {\n      case '+':\n        setRes(res => v11 + v22);\n        break;\n      case '-':\n        setRes(res => v11 - v22);\n        break;\n      case 'X':\n        setRes(res => v11 * v22);\n        break;\n      case '/':\n        setRes(res => v11 / v22);\n        break;\n      default:\n        setRes(res => res);\n    }\n    setV1(v1 => '');\n    setV2(v2 => '');\n    setOps(ops => '');\n    setFocus(focus => '');\n  };\n\n  const reset = () => {\n    setV1(v1 => '');\n    setV2(v2 => '');\n    setOps(ops => '');\n    setRes(res => '');\n    setFocus(focus => '');\n  };\n\n  const contextValue = {\n    setV1: setV1,\n    setV2: setV2,\n    focus: focus,\n    setFocus: setFocus,\n    ops: ops,\n    setOps: setOps,\n    res: calcResult,\n    reset: reset\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>CALCY</h1>\n      <form onSubmit={e => e.preventDefault()}>\n        <table>\n          <thead>\n            <tr>\n              <td>\n                <label>Result: </label>\n              </td>\n              <td colSpan=\"3\">\n                <input\n                  type=\"text\"\n                  placeholder={res}\n                  ref={ref1}\n                  readOnly\n                ></input>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <label>\n                  1<sup>st</sup> Operand:\n                </label>\n              </td>\n              <td colSpan=\"3\">\n                <input type=\"text\" placeholder={v1} ref={ref2} readOnly></input>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <label>\n                  2<sup>nd</sup> Operand:\n                </label>\n              </td>\n              <td colSpan=\"3\">\n                <input type=\"text\" placeholder={v2} readOnly></input>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <label>Operator: </label>\n              </td>\n              <td colSpan=\"3\">\n                <input type=\"text\" placeholder={ops} readOnly></input>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <Provider value={contextValue}>\n              <tr>\n                <Operation num=\"/\" rowSpan=\"1\" colSpan=\"1\"></Operation>\n                <Operation num=\"X\" rowSpan=\"1\" colSpan=\"1\"></Operation>\n                <Operation num=\"-\" rowSpan=\"1\" colSpan=\"1\"></Operation>\n                <Operation num=\"+\" rowSpan=\"1\" colSpan=\"1\"></Operation>\n              </tr>\n              <tr>\n                <Digit num=\"7\" rowSpan=\"1\" colSpan=\"1\"></Digit>\n                <Digit num=\"8\" rowSpan=\"1\" colSpan=\"1\"></Digit>\n                <Digit num=\"9\" rowSpan=\"1\" colSpan=\"1\"></Digit>\n                <Operation num=\"clr\" rowSpan=\"1\" colSpan=\"1\"></Operation>\n              </tr>\n              <tr>\n                <Digit num=\"4\" rowSpan=\"1\" colSpan=\"1\"></Digit>\n                <Digit num=\"5\" rowSpan=\"1\" colSpan=\"1\"></Digit>\n                <Digit num=\"6\" rowSpan=\"1\" colSpan=\"1\"></Digit>\n                <Operation num=\"C\" rowSpan=\"1\" colSpan=\"1\"></Operation>\n              </tr>\n              <tr>\n                <Digit num=\"1\" rowSpan=\"1\" colSpan=\"1\"></Digit>\n                <Digit num=\"2\" rowSpan=\"1\" colSpan=\"1\"></Digit>\n                <Digit num=\"3\" rowSpan=\"1\" colSpan=\"1\"></Digit>\n                <Operation num=\"=\" rowSpan=\"2\" colSpan=\"1\"></Operation>\n              </tr>\n              <tr>\n                <Digit num=\".\" rowSpan=\"1\" colSpan=\"1\"></Digit>\n                <Digit num=\"0\" rowSpan=\"1\" colSpan=\"2\"></Digit>\n              </tr>\n            </Provider>\n          </tbody>\n        </table>\n      </form>\n      <div id=\"footer\">Created by Deepbaran Kar</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}